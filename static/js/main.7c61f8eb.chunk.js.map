{"version":3,"sources":["images/cryptocurrency.png","components/navbar.jsx","services/cryptoApi.js","components/Cryptocurrencies.jsx","components/LineChart.jsx","components/CryptoDetails.jsx","components/HomePage.jsx","components/Exchanges.jsx","services/cryptoNewsApi.js","components/News.jsx","App.js","app/store.js","index.js"],"names":["Navbar","useState","activeMenu","setActiveMenu","screenSize","setScreenSize","useEffect","handleResize","window","innerWidth","addEventListener","removeEventListener","className","src","icon","size","Title","level","to","onClick","MenuOutlined","theme","Item","HomeOutlined","FundOutlined","MoneyCollectOutlined","BulbOutlined","cryptoApiHeaders","createRequest","url","headers","cryptoApi","createApi","reducerPath","baseQuery","fetchBaseQuery","baseUrl","endpoints","builder","getCryptos","query","count","getCryptoDetails","coinId","getCryptoHistory","timePeriod","useGetCryptosQuery","useGetCryptoDetailsQuery","useGetCryptoHistoryQuery","Cryptocurrencies","simplified","cryptosList","data","isFetching","cryptos","setCryptos","searchTerm","setSearchTerm","filteredData","coins","filter","coin","name","toLowerCase","includes","placeholder","onChange","e","target","value","gutter","map","currency","xs","sm","lg","id","title","rank","extra","iconUrl","alt","hoverable","millify","price","marketCap","change","Typography","LineChart","coinHistory","currentPrice","coinName","coinPrice","coinTimestamp","i","history","length","push","Date","timestamp","toLocaleDateString","labels","datasets","label","fill","backgroundColor","borderColor","lelev","options","scales","yAxes","ticks","beginAtZero","Text","Option","Select","CryptoDetails","useParams","setTimeperiod","cryptoDetails","stats","DollarCircleOutlined","NumberOutlined","volume","ThunderboltOutlined","allTimeHigh","TrophyOutlined","genericStats","numberOfMarkets","numberOfExchanges","approvedSupply","CheckOutlined","StopOutlined","ExclamationCircleOutlined","totalSupply","circulatingSupply","slug","defaultValue","date","HTMLReactParser","description","links","link","type","href","rel","HomePage","console","log","globalStats","span","total","totalExchanges","totalMarketCap","total24hVolume","totalMarkets","Exchanges","cryptoNewsHeaders","cryptoNewsApi","getCryptoNews","newsCategory","useGetCryptoNewsQuery","demoImage","News","setNewsCategory","cryptoNews","showSearch","optionFilterProp","filterOption","input","option","children","indexOf","news","image","thumbnail","contentUrl","substring","provider","moment","datePublished","startOf","fromNow","App","exact","path","style","color","textAlign","configureStore","reducer","ReactDOM","render","store","document","getElementById"],"mappings":"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","file":"static/js/main.7c61f8eb.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/cryptocurrency.1548aced.png\";","import React, { useState, useEffect } from \"react\";\r\nimport { Typography, Avatar, Menu, Button } from \"antd\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n  HomeOutlined,\r\n  BulbOutlined,\r\n  MoneyCollectOutlined,\r\n  FundOutlined,\r\n  MenuOutlined,\r\n} from \"@ant-design/icons\";\r\n\r\nimport icon from \"../images/cryptocurrency.png\";\r\nconst Navbar = () => {\r\n  const [activeMenu, setActiveMenu] = useState(true);\r\n  const [screenSize, setScreenSize] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const handleResize = () => setScreenSize(window.innerWidth);\r\n    window.addEventListener(\"resize\", handleResize);\r\n\r\n    handleResize();\r\n    return () => window.removeEventListener(\"resize\", handleResize);\r\n  }, []);\r\n  useEffect(() => {\r\n    if (screenSize < 768) {\r\n      setActiveMenu(false);\r\n    } else {\r\n      setActiveMenu(true);\r\n    }\r\n  }, [screenSize]);\r\n  return (\r\n    <div className=\"nav-container\">\r\n      <div className=\"logo-container\">\r\n        <Avatar src={icon} size=\"large\" />\r\n        <Typography.Title level={2} className=\"logo\">\r\n          <Link to=\"/\">Crypto</Link>\r\n        </Typography.Title>\r\n      </div>\r\n      <Button\r\n        className=\"menu-control-container\"\r\n        onClick={() => setActiveMenu(!activeMenu)}\r\n      >\r\n        <MenuOutlined />\r\n      </Button>\r\n      {activeMenu && (\r\n        <Menu theme=\"dark\">\r\n          <Menu.Item icon={<HomeOutlined />}>\r\n            <Link to=\"/\">Home</Link>\r\n          </Menu.Item>\r\n          <Menu.Item icon={<FundOutlined />}>\r\n            <Link to=\"/cryptocurrencies\">Cryptocurrencies</Link>\r\n          </Menu.Item>\r\n          <Menu.Item icon={<MoneyCollectOutlined />}>\r\n            <Link to=\"/exchanges\">Exchanges</Link>\r\n          </Menu.Item>\r\n          <Menu.Item icon={<BulbOutlined />}>\r\n            <Link to=\"/news\">News</Link>\r\n          </Menu.Item>\r\n        </Menu>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","import { createApi, fetchBaseQuery } from \"@reduxjs/toolkit/query/react\";\r\nconst cryptoApiHeaders = {\r\n  \"x-rapidapi-host\": \"coinranking1.p.rapidapi.com\",\r\n  \"X-RapidAPI-Key\": \"e25deb649fmsh70beed47192c348p156f24jsn776395354e35\",\r\n};\r\n\r\nconst baseUrl = \"https://coinranking1.p.rapidapi.com\";\r\n\r\nconst createRequest = (url) => ({\r\n  url,\r\n  headers: cryptoApiHeaders,\r\n});\r\n\r\nexport const cryptoApi = createApi({\r\n  reducerPath: \"cryptoApi\",\r\n  baseQuery: fetchBaseQuery({ baseUrl }),\r\n  endpoints: (builder) => ({\r\n    getCryptos: builder.query({\r\n      query: (count) => createRequest(`/coins?limit=${count}`),\r\n    }),\r\n    getCryptoDetails: builder.query({\r\n      query: (coinId) => createRequest(`/coin/${coinId}`),\r\n    }),\r\n    getCryptoHistory: builder.query({\r\n      query: ({ coinId, timePeriod }) =>\r\n        createRequest(`/coin/${coinId}/history/${timePeriod}`),\r\n    }),\r\n  }),\r\n});\r\nexport const {\r\n  useGetCryptosQuery,\r\n  useGetCryptoDetailsQuery,\r\n  useGetCryptoHistoryQuery,\r\n} = cryptoApi;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport millify from \"millify\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Card, Row, Col, Input } from \"antd\";\r\nimport { useGetCryptosQuery } from \"../services/cryptoApi\";\r\nconst Cryptocurrencies = ({ simplified }) => {\r\n  const count = simplified ? 10 : 100;\r\n  const { data: cryptosList, isFetching } = useGetCryptosQuery(count);\r\n  const [cryptos, setCryptos] = useState([]);\r\n  const [searchTerm, setSearchTerm] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    const filteredData = cryptosList?.data?.coins.filter((coin) =>\r\n      coin.name.toLowerCase().includes(searchTerm.toLowerCase())\r\n    );\r\n    setCryptos(filteredData);\r\n  }, [cryptosList, searchTerm]);\r\n\r\n  if (isFetching) return \"Loading\";\r\n  return (\r\n    <>\r\n      {!simplified && (\r\n        <div className=\"search-crypto\">\r\n          <Input\r\n            placeholder=\"Search CryptoCurrency\"\r\n            onChange={(e) => setSearchTerm(e.target.value)}\r\n          />\r\n        </div>\r\n      )}\r\n\r\n      <Row gutter={[32, 32]} className=\"crypto-card-container\">\r\n        {cryptos?.map((currency) => (\r\n          <Col xs={24} sm={12} lg={6} className=\"crypto-card\" key={currency.id}>\r\n            <Link to={`/crypto/${currency.id}`}>\r\n              <Card\r\n                title={`${currency.rank}. ${currency.name}`}\r\n                extra={\r\n                  <img\r\n                    className=\"crypto-image\"\r\n                    src={currency.iconUrl}\r\n                    alt={currency.name}\r\n                  />\r\n                }\r\n                hoverable\r\n              >\r\n                <p>Price: {millify(currency.price)}</p>\r\n                <p>Market Cap: {millify(currency.marketCap)}</p>\r\n                <p>Daily Change: {millify(currency.change)}%</p>\r\n              </Card>\r\n            </Link>\r\n          </Col>\r\n        ))}\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Cryptocurrencies;\r\n","import React from \"react\";\r\nimport { Line } from \"react-chartjs-2\";\r\nimport { Col, Row, Typography } from \"antd\";\r\nconst { Title } = Typography;\r\nconst LineChart = ({ coinHistory, currentPrice, coinName }) => {\r\n  const coinPrice = [];\r\n  const coinTimestamp = [];\r\n\r\n  for (let i = 0; i < coinHistory?.data?.history?.length; i += 1) {\r\n    coinPrice.push(coinHistory?.data?.history[i].price);\r\n    coinTimestamp.push(\r\n      new Date(coinHistory?.data?.history[i].timestamp).toLocaleDateString()\r\n    );\r\n  }\r\n\r\n  const data = {\r\n    labels: coinTimestamp,\r\n    datasets: [\r\n      {\r\n        label: \"Price in USD\",\r\n        data: coinPrice,\r\n        fill: false,\r\n        backgroundColor: \"#00771db\",\r\n        borderColor: \"#0071bd\",\r\n      },\r\n    ],\r\n  };\r\n  const options = {\r\n    scales: {\r\n      yAxes: [\r\n        {\r\n          ticks: {\r\n            beginAtZero: true,\r\n          },\r\n        },\r\n      ],\r\n    },\r\n  };\r\n  return (\r\n    <>\r\n      <Row className=\"chart-header\">\r\n        <Title lelev={2} className=\"chart-title\">\r\n          {coinName} Price Chart\r\n        </Title>\r\n        <Col className=\"price-container\">\r\n          <Title level={5} className=\"price-change\">\r\n            {coinHistory?.data?.change}%\r\n          </Title>\r\n          <Title level={5} className=\"current-price\">\r\n            current {coinName} Price: $ {currentPrice}\r\n          </Title>\r\n        </Col>\r\n      </Row>\r\n      <Line data={data} options={options} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LineChart;\r\n","import React, { useState } from \"react\";\r\nimport HTMLReactParser from \"html-react-parser\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport millify from \"millify\";\r\nimport { Col, Row, Typography, Select } from \"antd\";\r\nimport {\r\n  MoneyCollectOutlined,\r\n  DollarCircleOutlined,\r\n  FundOutlined,\r\n  ExclamationCircleOutlined,\r\n  StopOutlined,\r\n  TrophyOutlined,\r\n  CheckOutlined,\r\n  NumberOutlined,\r\n  ThunderboltOutlined,\r\n} from \"@ant-design/icons\";\r\n\r\nimport {\r\n  useGetCryptoDetailsQuery,\r\n  useGetCryptoHistoryQuery,\r\n} from \"../services/cryptoApi\";\r\nimport LineChart from \"./LineChart\";\r\nconst { Title, Text } = Typography;\r\nconst { Option } = Select;\r\n\r\nconst CryptoDetails = () => {\r\n  const { coinId } = useParams();\r\n  const [timePeriod, setTimeperiod] = useState(\"7d\");\r\n  const { data, isFetching } = useGetCryptoDetailsQuery(coinId);\r\n  const { data: coinHistory } = useGetCryptoHistoryQuery({\r\n    coinId,\r\n    timePeriod,\r\n  });\r\n\r\n  const cryptoDetails = data?.data?.coin;\r\n\r\n  if (isFetching) return \"Loading...\";\r\n\r\n  const time = [\"3h\", \"24h\", \"7d\", \"30d\", \"1y\", \"3m\", \"3y\", \"5y\"];\r\n\r\n  const stats = [\r\n    {\r\n      title: \"Price to USD\",\r\n      value: `$ ${cryptoDetails.price && millify(cryptoDetails.price)}`,\r\n      icon: <DollarCircleOutlined />,\r\n    },\r\n    { title: \"Rank\", value: cryptoDetails.rank, icon: <NumberOutlined /> },\r\n    {\r\n      title: \"24h Volume\",\r\n      value: `$ ${cryptoDetails.volume && millify(cryptoDetails.volume)}`,\r\n      icon: <ThunderboltOutlined />,\r\n    },\r\n    {\r\n      title: \"Market Cap\",\r\n      value: `$ ${cryptoDetails.marketCap && millify(cryptoDetails.marketCap)}`,\r\n      icon: <DollarCircleOutlined />,\r\n    },\r\n    {\r\n      title: \"All-time-high(daily avg.)\",\r\n      value: `$ ${millify(cryptoDetails.allTimeHigh.price)}`,\r\n      icon: <TrophyOutlined />,\r\n    },\r\n  ];\r\n\r\n  const genericStats = [\r\n    {\r\n      title: \"Number Of Markets\",\r\n      value: cryptoDetails.numberOfMarkets,\r\n      icon: <FundOutlined />,\r\n    },\r\n    {\r\n      title: \"Number Of Exchanges\",\r\n      value: cryptoDetails.numberOfExchanges,\r\n      icon: <MoneyCollectOutlined />,\r\n    },\r\n    {\r\n      title: \"Aprroved Supply\",\r\n      value: cryptoDetails.approvedSupply ? (\r\n        <CheckOutlined />\r\n      ) : (\r\n        <StopOutlined />\r\n      ),\r\n      icon: <ExclamationCircleOutlined />,\r\n    },\r\n    {\r\n      title: \"Total Supply\",\r\n      value: `$ ${millify(cryptoDetails.totalSupply)}`,\r\n      icon: <ExclamationCircleOutlined />,\r\n    },\r\n    {\r\n      title: \"Circulating Supply\",\r\n      value: `$ ${millify(cryptoDetails.circulatingSupply)}`,\r\n      icon: <ExclamationCircleOutlined />,\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <Col className=\"coin-detail-container\">\r\n      <Col className=\"coin-heading-container\">\r\n        <Title level={2} className=\"coin-name\">\r\n          {data?.data?.coin.name} ({data?.data?.coin.slug}) Price\r\n        </Title>\r\n        <p>\r\n          {cryptoDetails.name} live price in US Dollar (USD). View value\r\n          statistics, market cap and supply.\r\n        </p>\r\n      </Col>\r\n      <Select\r\n        defaultValue=\"7d\"\r\n        className=\"select-timeperiod\"\r\n        placeholder=\"Select Timeperiod\"\r\n        onChange={(value) => setTimeperiod(value)}\r\n      >\r\n        {time.map((date) => (\r\n          <Option key={date}>{date}</Option>\r\n        ))}\r\n      </Select>\r\n      <LineChart\r\n        coinHistory={coinHistory}\r\n        currentPrice={millify(cryptoDetails.price)}\r\n        coinName={cryptoDetails.name}\r\n      />\r\n      <Col className=\"stats-container\">\r\n        <Col className=\"coin-value-statistics\">\r\n          <Col className=\"coin-value-statistics-heading\">\r\n            <Title level={3} className=\"coin-details-heading\">\r\n              {cryptoDetails.name} Value Statistics\r\n            </Title>\r\n            <p>\r\n              An overview showing the statistics of {cryptoDetails.name}, such\r\n              as the base and quote currency, the rank, and trading volume.\r\n            </p>\r\n          </Col>\r\n          {stats.map(({ icon, title, value }) => (\r\n            <Col className=\"coin-stats\">\r\n              <Col className=\"coin-stats-name\">\r\n                <Text>{icon}</Text>\r\n                <Text>{title}</Text>\r\n              </Col>\r\n              <Text className=\"stats\">{value}</Text>\r\n            </Col>\r\n          ))}\r\n        </Col>\r\n        <Col className=\"other-stats-info\">\r\n          <Col className=\"coin-value-statistics-heading\">\r\n            <Title level={3} className=\"coin-details-heading\">\r\n              Other Stats Info\r\n            </Title>\r\n            <p>\r\n              An overview showing the statistics of {cryptoDetails.name}, such\r\n              as the base and quote currency, the rank, and trading volume.\r\n            </p>\r\n          </Col>\r\n          {genericStats.map(({ icon, title, value }) => (\r\n            <Col className=\"coin-stats\">\r\n              <Col className=\"coin-stats-name\">\r\n                <Text>{icon}</Text>\r\n                <Text>{title}</Text>\r\n              </Col>\r\n              <Text className=\"stats\">{value}</Text>\r\n            </Col>\r\n          ))}\r\n        </Col>\r\n      </Col>\r\n      <Col className=\"coin-desc-link\">\r\n        <Row className=\"coin-desc\">\r\n          <Title level={3} className=\"coin-details-heading\">\r\n            What is {cryptoDetails.name}?\r\n          </Title>\r\n          {HTMLReactParser(cryptoDetails.description)}\r\n        </Row>\r\n        <Col className=\"coin-links\">\r\n          <Title level={3} className=\"coin-details-heading\">\r\n            {cryptoDetails.name} Links\r\n          </Title>\r\n          {cryptoDetails.links?.map((link) => (\r\n            <Row className=\"coin-link\" key={link.id}>\r\n              <Title level={5} className=\"link-name\">\r\n                {link.type}\r\n              </Title>\r\n              <a href={link.url} target=\"_blank\" rel=\"noreferrer\">\r\n                {link.name}\r\n              </a>\r\n            </Row>\r\n          ))}\r\n        </Col>\r\n      </Col>\r\n    </Col>\r\n  );\r\n};\r\n\r\nexport default CryptoDetails;\r\n","import { useGetCryptosQuery } from \"../services/cryptoApi\";\r\nimport React from \"react\";\r\nimport millify from \"millify\";\r\nimport { Typography, Row, Col, Statistic } from \"antd\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Cryptocurrencies, News } from \"../components\";\r\nconst { Title } = Typography;\r\nconst HomePage = () => {\r\n  const { data, isFetching } = useGetCryptosQuery(10);\r\n  console.log(data?.data?.coins);\r\n  const globalStats = data?.data?.stats;\r\n  if (isFetching) return \"Loading...\";\r\n  return (\r\n    <>\r\n      <Title level={2} className=\"heading\">\r\n        Global Crypto Stats\r\n      </Title>\r\n      <Row>\r\n        <Col span={12}>\r\n          <Statistic title=\"Total Cryptocurrencies\" value={globalStats.total} />\r\n        </Col>\r\n        <Col span={12}>\r\n          <Statistic\r\n            title=\"Total Exchanges\"\r\n            value={millify(globalStats.totalExchanges)}\r\n          />\r\n        </Col>\r\n        <Col span={12}>\r\n          <Statistic\r\n            title=\"Total Market Cap\"\r\n            value={millify(globalStats.totalMarketCap)}\r\n          />\r\n        </Col>\r\n        <Col span={12}>\r\n          <Statistic\r\n            title=\"Total 24h Volume\"\r\n            value={millify(globalStats.total24hVolume)}\r\n          />\r\n        </Col>\r\n        <Col span={12}>\r\n          <Statistic\r\n            title=\"Total Markets\"\r\n            value={millify(globalStats.totalMarkets)}\r\n          />\r\n        </Col>\r\n      </Row>\r\n      <div className=\"home-heading-container\">\r\n        <Title level={2} className=\"home-title\">\r\n          Top 10 Cryptocurrencies in the world\r\n        </Title>\r\n        <Title level={3} className=\"show-more\">\r\n          <Link to=\"/cryptocurrencies\">Show More</Link>\r\n        </Title>\r\n      </div>\r\n      <Cryptocurrencies simplified />\r\n      <div className=\"home-heading-container\">\r\n        <Title level={2} className=\"home-title\">\r\n          Latest Crypto News\r\n        </Title>\r\n        <Title level={3} className=\"show-more\">\r\n          <Link to=\"/news\">Show More</Link>\r\n        </Title>\r\n      </div>\r\n      <News simplified />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default HomePage;\r\n","import React from \"react\";\r\n\r\nconst Exchanges = () => {\r\n  return <div>Exchanges</div>;\r\n};\r\n\r\nexport default Exchanges;\r\n","import { createApi, fetchBaseQuery } from \"@reduxjs/toolkit/query/react\";\r\nconst cryptoNewsHeaders = {\r\n  \"x-bingapis-sdk\": \"true\",\r\n  \"x-rapidapi-host\": \"bing-news-search1.p.rapidapi.com\",\r\n  \"x-rapidapi-key\": \"e25deb649fmsh70beed47192c348p156f24jsn776395354e35\",\r\n};\r\nconst baseUrl = \"https://bing-news-search1.p.rapidapi.com\";\r\n\r\nconst createRequest = (url) => ({\r\n  url,\r\n  headers: cryptoNewsHeaders,\r\n});\r\nexport const cryptoNewsApi = createApi({\r\n  reducerPath: \"cryptoNewsApi\",\r\n  baseQuery: fetchBaseQuery({ baseUrl }),\r\n  endpoints: (builder) => ({\r\n    getCryptoNews: builder.query({\r\n      query: ({ newsCategory, count }) =>\r\n        createRequest(\r\n          `/news/search?q=${newsCategory}&safeSearch=Off&textFormat=Raw&freshness=Day&count=${count}`\r\n        ),\r\n    }),\r\n  }),\r\n});\r\nexport const { useGetCryptoNewsQuery } = cryptoNewsApi;\r\n","import React, { useState } from \"react\";\r\nimport { Select, Typography, Row, Col, Avatar, Card } from \"antd\";\r\nimport moment from \"moment\";\r\n\r\nimport { useGetCryptosQuery } from \"../services/cryptoApi\";\r\nimport { useGetCryptoNewsQuery } from \"../services/cryptoNewsApi\";\r\n\r\nconst demoImage =\r\n  \"https://www.bing.com/th?id=OVFT.mpzuVZnv8dwIMRfQGPbOPC&pid=News\";\r\n\r\nconst { Text, Title } = Typography;\r\nconst { Option } = Select;\r\n\r\nconst News = ({ simplified }) => {\r\n  const [newsCategory, setNewsCategory] = useState(\"Cryptocurrency\");\r\n  const { data } = useGetCryptosQuery(100);\r\n  const { data: cryptoNews } = useGetCryptoNewsQuery({\r\n    newsCategory,\r\n    count: simplified ? 6 : 12,\r\n  });\r\n\r\n  if (!cryptoNews?.value) return \"Loading...\";\r\n\r\n  return (\r\n    <Row gutter={[24, 24]}>\r\n      {!simplified && (\r\n        <Col span={24}>\r\n          <Select\r\n            showSearch\r\n            className=\"select-news\"\r\n            placeholder=\"Select a Crypto\"\r\n            optionFilterProp=\"children\"\r\n            onChange={(value) => setNewsCategory(value)}\r\n            filterOption={(input, option) =>\r\n              option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\r\n            }\r\n          >\r\n            <Option value=\"Cryptocurency\">Cryptocurrency</Option>\r\n            {data?.data?.coins?.map((currency) => (\r\n              <Option value={currency.name}>{currency.name}</Option>\r\n            ))}\r\n          </Select>\r\n        </Col>\r\n      )}\r\n      {cryptoNews.value.map((news, i) => (\r\n        <Col xs={24} sm={12} lg={8} key={i}>\r\n          <Card hoverable className=\"news-card\">\r\n            <a href={news.url} target=\"_blank\" rel=\"noreferrer\">\r\n              <div className=\"news-image-container\">\r\n                <Title className=\"news-title\" level={4}>\r\n                  {news.name}\r\n                </Title>\r\n                <img\r\n                  src={news?.image?.thumbnail?.contentUrl || demoImage}\r\n                  alt=\"\"\r\n                />\r\n              </div>\r\n              <p>\r\n                {news.description.length > 100\r\n                  ? `${news.description.substring(0, 100)}...`\r\n                  : news.description}\r\n              </p>\r\n              <div className=\"provider-container\">\r\n                <div>\r\n                  <Avatar\r\n                    src={\r\n                      news.provider[0]?.image?.thumbnail?.contentUrl ||\r\n                      demoImage\r\n                    }\r\n                    alt=\"\"\r\n                  />\r\n                  <Text className=\"provider-name\">\r\n                    {news.provider[0]?.name}\r\n                  </Text>\r\n                </div>\r\n                <Text>\r\n                  {moment(news.datePublished).startOf(\"ss\").fromNow()}\r\n                </Text>\r\n              </div>\r\n            </a>\r\n          </Card>\r\n        </Col>\r\n      ))}\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport default News;\r\n","import React from \"react\";\r\n//Link\r\nimport { Switch, Route, Link } from \"react-router-dom\";\r\nimport { Layout, Typography, Space } from \"antd\";\r\nimport {\r\n  Navbar,\r\n  Exchanges,\r\n  HomePage,\r\n  Cryptocurrencies,\r\n  News,\r\n  CryptoDetails,\r\n} from \"./components\";\r\nimport \"./App.css\";\r\nconst App = () => {\r\n  return (\r\n    <div className=\"app\">\r\n      <div className=\"navbar\">\r\n        <Navbar />\r\n      </div>\r\n      <div className=\"main\">\r\n        <Layout>\r\n          <div className=\"routes\">\r\n            <Switch>\r\n              <Route exact path=\"/\">\r\n                <HomePage />\r\n              </Route>\r\n              <Route exact path=\"/exchanges\">\r\n                <Exchanges />\r\n              </Route>\r\n              <Route exact path=\"/cryptocurrencies\">\r\n                <Cryptocurrencies />\r\n              </Route>\r\n              <Route exact path=\"/crypto/:coinId\">\r\n                <CryptoDetails />\r\n              </Route>\r\n              <Route exact path=\"/news\">\r\n                <News />\r\n              </Route>\r\n            </Switch>\r\n          </div>\r\n        </Layout>\r\n\r\n        <div className=\"footer\">\r\n          <Typography.Title\r\n            level={5}\r\n            style={{ color: \"white\", textAlign: \"center\" }}\r\n          >\r\n            Crypto <br />\r\n            All rights reserved\r\n          </Typography.Title>\r\n          <Space>\r\n            <Link to=\"/\">Home</Link>\r\n            <Link to=\"/exchanges\">Exchanges</Link>\r\n            <Link to=\"/news\">News</Link>\r\n          </Space>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import { configureStore } from \"@reduxjs/toolkit\";\r\n\r\nimport { cryptoApi } from \"../services/cryptoApi\";\r\nimport { cryptoNewsApi } from \"../services/cryptoNewsApi\";\r\nexport default configureStore({\r\n  reducer: {\r\n    [cryptoApi.reducerPath]: cryptoApi.reducer,\r\n    [cryptoNewsApi.reducerPath]: cryptoNewsApi.reducer,\r\n  },\r\n});\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport { BrowserRouter as Router } from \"react-router-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport \"antd/dist/antd.css\";\r\nimport store from \"./app/store\";\r\nReactDOM.render(\r\n  <Router>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </Router>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}